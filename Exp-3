# To load an executable program in a child processes exec system call.

#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include<sys/wait.h>
int main(int argc, char *argv[])
{
    pid_t child = fork();
    if(child == -1){
        printf("Failed to create child process\n");
        return -1;
    }
    else if(child > 1){
        printf("Waiting for the child process to be executed\n");
        wait(0);
        printf("Executing Parent Process\n");
        printf("Id of the parent process is: %d\n", getpid());
        char *args[] = {"hello", "C", "Programming", NULL};
        if(execv("./hello", args) == -1){
            printf("Failed to load the program\n");
            return -1;
        }
    }
    else{
        printf("Execuing child process\n");
     
    }
    return 0;
}




# hello.txt  file

#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
int main(int argc, char *argv[])
{
    printf("We are in hello.c\n");
    printf("Id of hello.c = %d\n", getpid());
    return 0;
}

